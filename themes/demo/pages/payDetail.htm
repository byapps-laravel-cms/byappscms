title = "결제상세"
url = "/pay/detail/:idx"
layout = "default"
description = "결제 관리를 하실 수 있습니다"
is_hidden = 0
child_of = "payManage"
hide_crumb = 0
remove_crumb_trail = 0
crumb_disabled = 0

[builderDetails]
modelClass = "Jiwon\Byapps\Models\PaymentData"
identifierValue = "{{ :idx }}"
modelKeyColumn = "idx"
displayColumn = "app_name"
notFoundMessage = "Record not found"

[session]
security = "user"
allowedUserGroups[] = "admin_level_2"
redirect = "permission"

[breadcrumbs]
main-ol-class = "breadcrumb"
main-li-class = "breadcrumb-item"
active-class = "active"
disabled-class = "disabled"

[paymentForm]

[builderList]
modelClass = "Jiwon\Byapps\Models\PayManage"
scope = "-"
scopeValue = "{{ :scope }}"
displayColumn = "app_name"
noRecordsMessage = "No records found"
detailsPage = "payDetail"
detailsKeyColumn = "idx"
detailsUrlParameter = "idx"
recordsPerPage = 20
pageNumber = "{{ :page }}"
sortColumn = "idx"
sortDirection = "desc"
==
<?php
use Jiwon\Byapps\Models\PaymentData;

function onStart()
{
    $this['record'] = PaymentData::where('idx', '=', $this->param('idx'))->first();
    //$this['records'] = PaymentData::orderBy('reg_time')->get();

    $this['itemlist'] = array("주문번호", "결제날짜", "회원ID", "App 명", "결제기간", "결제금액","결제정보" , "영수증정보");

    $this['func'] = new Class {
        public function dateFormat($val)
        {
           $dateString = date("Y-m-d h:i:s", $val);
           return $dateString;
        }
        public function dateFormatSimple($val)
        {
           $dateString = date("Y-m-d", $val);
           return $dateString;
        }
    };

    $this['arrPaytype'] = array(
      0 => '신규', 1 => '연장', 2 => '충전', 3 => '추가', 4=> '기타'
    );
}
?>
==
{% component 'breadcrumbs' %}

<div class="container">

{% set record = builderDetails.record %}
{% set displayColumn = builderDetails.displayColumn %}
{% set notFoundMessage = builderDetails.notFoundMessage %}

    <div class="alert alert-info">
    {% if record %}
        <h4>
          <strong>{{ attribute(record, displayColumn) }}</strong>
        </h4>

    {% else %}
        {{ notFoundMessage }}
    {% endif %}
  </div>

    <hr />

    <div class="method">
        <div class="row margin-0">

       {% component paymentForm ~ '::update' %}

    </div>

    <br />
    <hr />
    <br />

    {% set records = builderList.records %}
    {% set displayColumn = builderList.displayColumn %}
    {% set noRecordsMessage = builderList.noRecordsMessage %}
    {% set detailsPage = builderList.detailsPage %}
    {% set detailsKeyColumn = builderList.detailsKeyColumn %}
    {% set detailsUrlParameter = builderList.detailsUrlParameter %}

    <table id="example" class="table table-striped table-bordered" style="width:100%">
            <col width="40%">
            <col width="5%">
            <col width="30%">
            <col width="10%">
            <col width="15%">
            <thead>
                <tr>
                    <th>앱명</th>
                    <th>구분</th>
                    <th>기간</th>
                    <th>결제금액</th>
                    <th>결제일</th>
                </tr>
            </thead>

            <tbody>
             {% for record in records %}
                <tr>
                    <td >
                    {% if detailsPage %}
                        <a href="{{ detailsPage|page({ (detailsUrlParameter): attribute(record, detailsKeyColumn) }) }}">
                    {% endif %}

                    {{ attribute(record, displayColumn) }}

                    {% if detailsPage %}
                        </a>
                    {% endif %}
                    </td>

                    <td>
                    {% for key,val in arrPaytype %}
                      {{ key == record.pay_type ? val : "" }}
                    {% endfor %}
                    </td>

                    <td>{{ record.term }}일 ({{ func.dateFormat(record.start_time) }} ~ {{ func.dateFormat(record.end_time) }})</td>
                    <td>{{ record.amount | number_format(0, ',') }}</td>
                    <td>{{ func.dateFormat(record.reg_time) }}</td>
                </tr>

             {% else %}
            <li class="no-data">{{ noRecordsMessage }}</li>
            {% endfor %}
            </tbody>
        </table>

        {% set paginationEnabled =
            records.currentPage > 1 or
            records.lastPage > 1 or
            records.lastPage > records.currentPage
        %}

        {% if paginationEnabled %}
            {# How many pages to display around the current page #}
            {% set n = 2 %}

            {% set currentPageZeroBased = records.currentPage-1 %}

            {% set pageLinks = [] %}
            {% set pageSet = [] %}

            {% set startOffset = max(currentPageZeroBased - n, 0) %}
            {% if (startOffset + 2*n+1) > (records.lastPage-1) %}
                {% set startOffset = max(records.lastPage - 2*n - 1, 0) %}
            {% endif %}

            {% for page in 1..records.lastPage %}
                {% set pageLinks = pageLinks|merge([page]) %}
            {% endfor %}

            {% set activeBlock = pageLinks|slice(startOffset, 2*n + 1) %}

            {% if startOffset > 0 %}
                {% set pageSet = pageSet|merge([1]) %}

                {% if startOffset > 1 %}
                    {% set pageSet = pageSet|merge(['...']) %}
                {% endif %}
            {% endif %}

            {% set pageSet = pageSet|merge(activeBlock) %}

            {% set diffToEnd = (records.lastPage-1) - (startOffset + 2*n+1) + 1 %}

            {% if diffToEnd > 0 %}
                {% if diffToEnd > 1 %}
                    {% set pageSet = pageSet|merge(['...']) %}
                {% endif %}

                {% set pageSet = pageSet|merge([records.lastPage]) %}
            {% endif %}

            <ul class="pagination">
                {% if records.currentPage > 1 %}
                    <li>
                        <a href="{{ paginationUrl ~ (records.currentPage - 1) }}">
                            &larr; Previous
                        </a>
                    </li>
                {% else %}
                    <li class="disabled">
                        <span>
                            &larr; Previous
                        </span>
                    </li>
                {% endif %}

                {% for page in pageSet %}
                    {% if page == '...' %}
                        <li class="interval">
                            <a>{{ page }}</a>
                        </li>
                    {% else %}
                        <li class="{{ page == records.currentPage ? 'active' }}">
                            <a href="{{ paginationUrl ~ page }}">{{ page }}</a>
                        </li>
                    {% endif %}
                {% endfor %}

                {% if records.lastPage > records.currentPage %}
                    <li>
                        <a href="{{ paginationUrl ~ (records.currentPage + 1) }}">
                            Next &rarr;
                        </a>
                    </li>
                {% else %}
                    <li class="disabled">
                        <span>
                            Next &rarr;
                        </span>
                    </li>
                {% endif %}
            </ul>
        {% endif %}
</div>
