title = "앱 목록"
url = "/apps/appslist/:page"
layout = "default"
description = "앱 등록 등의 관리를 하실 수 있습니다"
is_hidden = 0
child_of = "mey_no_parent"
hide_crumb = 0
remove_crumb_trail = 0
crumb_disabled = 0

[builderList]
modelClass = "Jiwon\Byapps\Models\AppsData"
scope = "-"
scopeValue = "{{ :scope }}"
displayColumn = "app_name"
noRecordsMessage = "No records found"
detailsPage = "-"
detailsKeyColumn = "idx"
detailsUrlParameter = "idx"
pageNumber = "{{ :page }}"
sortColumn = "idx"
sortDirection = "desc"

[session]
security = "user"
allowedUserGroups[] = "admin_level_1"
redirect = "permission"

[breadcrumbs]
main-ol-class = "breadcrumb"
active-class = "active"
disabled-class = "disabled"
==
<?php
use Jiwon\Byapps\Models\AppsData;

function onStart()
{
    $this['tableName'] = 'BYAPPS_apps_data';
    $this['fields'] = "idx|app_id|app_name|app_ver|byapps_ver|app_process|script_popup|custom_etc|apps_type|start_time|reg_time";
}
?>
==
{% component 'breadcrumbs' %}

<style>

.dataTables_wrapper .dataTables_scroll {
  width:100%;
}
</style>

<div class="container col-12 col-md-12">

<!-- {% set records = builderList.records %} -->
{% set displayColumn = builderList.displayColumn %}
{% set noRecordsMessage = builderList.noRecordsMessage %}
{% set detailsPage = builderList.detailsPage %}
{% set detailsKeyColumn = builderList.detailsKeyColumn %}
{% set detailsUrlParameter = builderList.detailsUrlParameter %}

 <div class="method">
   <div class="col-md-12 margin-5">

    <form name="form-datalist" id="form-datalist">

      <button type="submit" class="btn btn-primary mb-1" style="float:right;">상태변경</button>

    <table id="datalist" class="table table-striped mb-3 table-colored table-inverse" style="width:100%;">
        <thead>
            <tr>
                <th></th>
                <th>앱 아이디</th>
                <th>앱명</th>
                <th>버전</th>
                <th>BV</th>
                <th>등록상태</th>
                <th>SCRIPT</th>
                <th>커스텀</th>
                <th>신청OS</th>
                <th>서비스기간</th>
                <th>등록일</th>
            </tr>
        </thead>

        <!-- <tbody>
         {% for record in records %}
            <tr>
                <td>{{ record.app_id }}</td>
                <td>
                {% if detailsPage %}
                    <a href="{{ detailsPage|page({ (detailsUrlParameter): attribute(record, detailsKeyColumn) }) }}">
                {% endif %}

                {{ attribute(record, displayColumn) }}

                {% if detailsPage %}
                    </a>
                {% endif %}
                </td>
                <td>{{ record.app_ver }}</td>
                <td>{{ record.byapps_ver }}</td>
                <td>{{ record.app_process }}</td>
                <td>{{ record.app_build }}</td>
                <td>커스텀</td>
                <td>{{ record.app_os_type == 'both' ? 'and+ios' : record.app_os_type }}</td>
                <td>{{ func.dateFormat(record.reg_time) }}</td>
            </tr>

         {% else %}
        <li class="no-data">{{ noRecordsMessage }}</li>
        {% endfor %}
        </tbody> -->
    </table>

  </form>
  </div>
</div>

<script>

$(document).ready(function() {
  var tableId = "datalist";
  var selected = [];

  var table = $('#' + tableId).DataTable({
      processing: true,
      serverSide: true,
      ajax: {
          url: '/ajax?tb={{ tableName|raw() }}&fd={{ fields|raw() }}',
          type: 'GET',
          error: function(e) {
            console.log(e);
          }
      },
      columnDefs: [
         {
            'targets': 0,
            'className': 'select-checkbox',
            'checkboxes': {
               'selectRow': true
            }
         },
         {
           'targets': 1,
           'render': function ( data, type, row, meta ) {
              return '<a href="/apps/appsdetail/'+row[0]+'">'+data+'</a>';
           }
         }
      ],
      select: {
         'style': 'multi'
      },
      order: [
        [ 0, 'desc']
      ],
      fnRowCallback: function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
        if (aData[5] == '서비스중지'){
          $('td:eq(5)', nRow).wrap('<span class="badge badge-danger"></span>');
        } else if (aData[5] == '등록완료') {
          $('td:eq(5)', nRow).wrap('<span class="badge badge-success"></span>');
        } else if (aData[5] == '등록대기') {
          $('td:eq(5)', nRow).wrap('<span class="badge badge-purple"></span>');
        } else if (aData[5] == '개발준비중') {
          $('td:eq(5)', nRow).wrap('<span class="badge badge-warning"></span>');
        }

        $(nRow).attr("rowidx", aData[0]);
        return nRow;
      },
      paging: true,
      pageLength: 50,
      info: false,
      autoWidth: true,
      fixedHeader: false,
      responsive: true,
      orderClasses: false,
      stateSave: true,
      dom: 'Bfrtip',
      buttons: [
          'excel', 'copy'
      ],
      language: {
        'emptyTable': '데이터가 없어요.',
          'lengthMenu': '페이지당 _MENU_ 개씩 보기',
          'info': '현재 _START_ - _END_ / _TOTAL_건',
          'infoEmpty': '데이터 없음',
          'infoFiltered': '( _MAX_건의 데이터에서 필터링됨 )',
          'search': '검색: ',
          'zeroRecords': '일치하는 데이터가 없어요.',
          'loadingRecords': '로딩중...',
          'processing':     '잠시만 기다려 주세요...',
          'paginate': {
              'next': '다음',
              'previous': '이전'
          },
          'buttons': {
              'excel': '엑셀',
              'copy': '복사'
          }
      },
  });

  // $('#datalist tbody').on('click', 'tr', function () {
  //     var idx = $(this).attr('rowidx');
  //     //console.log(id);
  //     var index = $.inArray(idx, selected);
  //
  //     if ( index === -1 ) {
  //         selected.push(idx);
  //     } else {
  //         selected.splice( index, 1 );
  //     }
  //     //console.log(selected);
  //     $(this).toggleClass('selected');
  // });
  //
  // $('#form-datalist').on('submit', function(e){
  //    var form = this;
  //    var rows_selected = table.column(0).checkboxes.selected();
  //
  //    // Iterate over all selected checkboxes
  //    $.each(rows_selected, function(index, rowId){
  //       console.log(rowId);
  //       // Create a hidden element
  //       $(form).append(
  //           $('<input>')
  //              .attr('type', 'hidden')
  //              .attr('name', 'id[]')
  //              .val(rowId)
  //       );
  //    });
  //
  //    $.ajax({
  //      type: 'POST',
  //      url: '/ajaxProcess',
  //      data: {
  //        'dt': form.serializeArray(),
  //        'tb': {{ tableName|raw() }},
  //        'fd': {{ fields|raw() }}
  //      },
  //      error: function(e) {
  //        console.log(e);
  //      },
  //      success: function() {
  //        table = $('#' + tableId).DataTable();
  //        table.ajax.reload();
  //      }
  //    });
  // });
});

</script>

<!-- {% set paginationEnabled =
    records.currentPage > 1 or
    records.lastPage > 1 or
    records.lastPage > records.currentPage
%}

{% if paginationEnabled %}
    {# How many pages to display around the current page #}
    {% set n = 2 %}

    {% set currentPageZeroBased = records.currentPage-1 %}

    {% set pageLinks = [] %}
    {% set pageSet = [] %}

    {% set startOffset = max(currentPageZeroBased - n, 0) %}
    {% if (startOffset + 2*n+1) > (records.lastPage-1) %}
        {% set startOffset = max(records.lastPage - 2*n - 1, 0) %}
    {% endif %}

    {% for page in 1..records.lastPage %}
        {% set pageLinks = pageLinks|merge([page]) %}
    {% endfor %}

    {% set activeBlock = pageLinks|slice(startOffset, 2*n + 1) %}

    {% if startOffset > 0 %}
        {% set pageSet = pageSet|merge([1]) %}

        {% if startOffset > 1 %}
            {% set pageSet = pageSet|merge(['...']) %}
        {% endif %}
    {% endif %}

    {% set pageSet = pageSet|merge(activeBlock) %}

    {% set diffToEnd = (records.lastPage-1) - (startOffset + 2*n+1) + 1 %}

    {% if diffToEnd > 0 %}
        {% if diffToEnd > 1 %}
            {% set pageSet = pageSet|merge(['...']) %}
        {% endif %}

        {% set pageSet = pageSet|merge([records.lastPage]) %}
    {% endif %}

    <ul class="pagination">
        {% if records.currentPage > 1 %}
            <li>
                <a href="{{ paginationUrl ~ (records.currentPage - 1) }}">
                    &larr; Previous
                </a>
            </li>
        {% else %}
            <li class="disabled">
                <span>
                    &larr; Previous
                </span>
            </li>
        {% endif %}

        {% for page in pageSet %}
            {% if page == '...' %}
                <li class="interval">
                    <a>{{ page }}</a>
                </li>
            {% else %}
                <li class="{{ page == records.currentPage ? 'active' }}">
                    <a href="{{ paginationUrl ~ page }}">{{ page }}</a>
                </li>
            {% endif %}
        {% endfor %}

        {% if records.lastPage > records.currentPage %}
            <li>
                <a href="{{ paginationUrl ~ (records.currentPage + 1) }}">
                    Next &rarr;
                </a>
            </li>
        {% else %}
            <li class="disabled">
                <span>
                    Next &rarr;
                </span>
            </li>
        {% endif %}
    </ul>
{% endif %} -->
